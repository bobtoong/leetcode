/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode newNode, resultNode, currNode;
        int sum, over = 0;
        
        resultNode = null;
        newNode = null;
        currNode = null;
        while (l1 != null || l2 != null || over != 0){
            currNode = new ListNode(0);
            if (currNode != null){
                currNode.next = null;
            }

            if (l1 != null && l2 != null){
                currNode.val = l1.val + l2.val + over;
            } else if (l1 == null && l2 != null){
                currNode.val = l2.val + over;
            } else if (l2 == null && l1 != null){
                currNode.val = l1.val + over;
            } else if (over == 1){
                currNode.val = over;
            } else {
                break;
            }

            if (currNode.val >= 10){
                over = 1;
                currNode.val -= 10;
            } else {
                over = 0;
            }
            
            if (resultNode == null){
                resultNode = currNode;
            }

            if (newNode == null){
                newNode = currNode;
            } else {
                newNode.next = currNode;
                newNode = newNode.next;
            }
            
            if (l1 != null){
                l1 = l1.next;
            }
            if (l2 != null){
                l2 = l2.next;
            }
        }

        if (resultNode == null){
            return null;
        } else{
            return resultNode;
        }
    }
}
