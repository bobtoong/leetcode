class Solution {
    public int maxProfit(int[] prices) {
        boolean bGrow = false;
        int sum = 0;

        if (prices.length <= 1) return 0;
        int min = prices[0], max = prices[0];
        if (prices.length == 2){
            if (prices[0] < prices[1])
                return prices[1] - prices[0];
        } else {
            if (prices[0] < prices[1]){
                bGrow = true;
                min = prices[0];
                max = prices[1];
            }
            else{
                bGrow = false;
                min = prices[0];
                max = prices[0];
            }
        }

        for (int i = 2; i < prices.length; i++){
            if (prices[i-1] > prices[i]){
                if (bGrow == true){
                    max = prices[i-1];
                    sum += max - min;
                    max = min;
                } else {
                    min = prices[i];
                    max = prices[i];
                }
                bGrow = false;
            } else if (prices[i-1] < prices[i]){
                if (bGrow == true){
                    max = prices[i];
                } else {
                    max = prices[i];
                    min = prices[i-1];
                }
                bGrow = true;
            }
        }
        
        if (min < max){
            sum += max - min;
        }

        return sum;
    }
}
