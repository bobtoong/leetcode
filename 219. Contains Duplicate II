class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        Map<Integer, Integer> map = new HashMap<>();

        for (int i = 0; i < nums.length; i++){
            map.put(i, nums[i]);
        }
        Iterator it = sortByValue(map).iterator();

        int prevI = -1;
        int prevV = -1*Integer.MAX_VALUE;
        while (it.hasNext()){
            int key = (int)it.next();
            int value =map.get(key);
            
            if (prevV == value){
                if (prevI - key <= k) return true;
            }
            prevI = key;
            prevV = value;
        }
        return false;
    }

    private static List sortByValue(final Map map){
        List<Integer> list = new ArrayList();
        list.addAll(map.keySet());
        
        Collections.sort(list, new Comparator(){
            public int compare(Object o1, Object o2){
                Object v1 = map.get(o1);
                Object v2 = map.get(o2);
                
                return ((Comparable)v1).compareTo(v2);
            }
        });
        Collections.reverse(list);
        return list;
    }
}
